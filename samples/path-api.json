{
  "openapi": "3.1.1",
  "info": {
    "title": "Oaskit Test API",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5001/"
    }
  ],
  "components": {
    "schemas": {
      "JSV:KeywordError": {
        "title": "JSV:KeywordError",
        "additionalProperties": false,
        "description": "Represents an returned by a single keyword like `type` or `required`, or a combination of keywords like `if` and `else`. Such annotations can contain nested error units, for instance `oneOf` may contain errors units for all subschemas when no subschema listed in `oneOf` did match the input value. The list of possible values includes",
        "properties": {
          "details": {
            "items": {
              "$ref": "#/components/schemas/JSV:ValidationUnit"
            },
            "type": "array"
          },
          "kind": {
            "description": "The keyword or internal operation that invalidated the data, like \"type\", or a combination like \"if/else\". Custom vocabularies can create their own kinds over the built-in ones.",
            "type": "string"
          },
          "message": {
            "description": "An error message related to the invalidating keyword",
            "type": "string"
          }
        },
        "required": [
          "kind",
          "message"
        ],
        "type": "object"
      },
      "JSV:ValidationError": {
        "title": "JSV:ValidationError",
        "additionalProperties": false,
        "description": "This represents a normalized `JSV.ValidationError` in a JSON-encodable way. It contains a list of error units.",
        "properties": {
          "details": {
            "items": {
              "$ref": "#/components/schemas/JSV:ValidationUnit"
            },
            "type": "array"
          },
          "valid": {
            "const": false
          }
        },
        "required": [
          "valid"
        ],
        "type": "object"
      },
      "JSV:ValidationUnit": {
        "title": "JSV:ValidationUnit",
        "additionalProperties": false,
        "description": "Describes all errors found at given instanceLocation raised by the same sub-schema (same schemaLocation and evaluationPath). It may also represent a positive validation result, (when `valid` is `true`) needed when for instance multiple schemas under `oneOf` validates the input sucessfully.",
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/JSV:KeywordError"
            },
            "type": "array"
          },
          "evaluationPath": {
            "description": "A JSON path pointing to the part of the schema that invalidated the data, but going through all indirections like $ref within the schema, starting from the root schema.",
            "type": "string"
          },
          "instanceLocation": {
            "description": "A JSON path pointing to the invalid part in the input data.",
            "type": "string"
          },
          "schemaLocation": {
            "description": "A JSON path pointing to the part of the schema that invalidated the data.",
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        },
        "required": [
          "valid"
        ],
        "type": "object"
      },
      "Oaskit.TestWeb.Schemas.FortuneCookie": {
        "properties": {
          "category": {
            "enum": [
              "wisdom",
              "humor",
              "warning",
              "advice"
            ]
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "category",
          "message"
        ],
        "type": "object"
      },
      "Oaskit.TestWeb.Schemas.GenericError": {
        "properties": {
          "errcode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "errcode",
          "message"
        ],
        "type": "object"
      },
      "Oaskit.TestWeb.Schemas.RespSchema": {
        "properties": {
          "op_id": {
            "type": "string"
          }
        },
        "required": [
          "op_id"
        ],
        "type": "object"
      },
      "Oaskit.TestWeb.Schemas.SoilSchema": {
        "properties": {
          "acid": {
            "type": "boolean"
          },
          "density": {
            "type": "number"
          }
        },
        "required": [
          "acid",
          "density"
        ],
        "type": "object"
      },
      "Oaskit:BadRequestError": {
        "title": "Oaskit:BadRequestError",
        "properties": {
          "kind": {
            "const": "bad_request"
          },
          "parameters_errors": {
            "items": {
              "oneOf": [
                {
                  "properties": {
                    "kind": {
                      "const": "invalid_parameter"
                    },
                    "validation_error": {
                      "$ref": "#/components/schemas/JSV:ValidationError"
                    }
                  },
                  "required": [
                    "validation_error"
                  ]
                },
                {
                  "properties": {
                    "kind": {
                      "const": "missing_parameter"
                    }
                  }
                }
              ],
              "properties": {
                "in": {
                  "enum": [
                    "query",
                    "path"
                  ]
                },
                "kind": {
                  "enum": [
                    "invalid_parameter",
                    "missing_parameter"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "parameter": {
                  "type": "string"
                }
              },
              "required": [
                "in",
                "message",
                "parameter"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "parameters_errors"
        ],
        "type": "object"
      },
      "Oaskit:Error": {
        "title": "Oaskit:Error",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Oaskit:UnprocessableEntityError"
          },
          {
            "$ref": "#/components/schemas/Oaskit:UnsupportedMediaTypeError"
          },
          {
            "$ref": "#/components/schemas/Oaskit:BadRequestError"
          }
        ],
        "properties": {
          "in": {
            "enum": [
              "body",
              "parameters"
            ]
          },
          "kind": {
            "enum": [
              "unprocessable_entity",
              "unsupported_media_type",
              "bad_request"
            ]
          },
          "message": {
            "type": "string"
          },
          "operation_id": {
            "description": "The ID of the operation that could not be executed",
            "type": "string"
          }
        },
        "required": [
          "in",
          "kind",
          "message",
          "operation_id"
        ],
        "type": "object"
      },
      "Oaskit:ErrorResponse": {
        "title": "Oaskit:ErrorResponse",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Oaskit:Error"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "Oaskit:UnprocessableEntityError": {
        "title": "Oaskit:UnprocessableEntityError",
        "properties": {
          "kind": {
            "const": "unprocessable_entity"
          },
          "validation_error": {
            "$ref": "#/components/schemas/JSV:ValidationError"
          }
        },
        "required": [
          "validation_error"
        ],
        "type": "object"
      },
      "Oaskit:UnsupportedMediaTypeError": {
        "title": "Oaskit:UnsupportedMediaTypeError",
        "properties": {
          "kind": {
            "const": "unsupported_media_type"
          },
          "media_type": {
            "type": "string"
          }
        },
        "required": [
          "media_type"
        ],
        "type": "object"
      },
      "PlantSchema": {
        "title": "PlantSchema",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "soil": {
            "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.SoilSchema"
          },
          "sunlight": {
            "enum": [
              "full_sun",
              "partial_sun",
              "bright_indirect",
              "darnkness"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "sunlight"
        ],
        "type": "object"
      }
    },
    "responses": {
      "SpecialFortune": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "category": {
                  "enum": [
                    "wisdom",
                    "humor",
                    "warning",
                    "advice"
                  ]
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "category",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "description": "A response to be used from a $ref"
      }
    },
    "parameters": {
      "QueryParamArrayOfIntegers": {
        "in": "query",
        "name": "some_ints",
        "schema": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      }
    }
  },
  "paths": {
    "/generated/body/boolean-schema-false": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_boolean_schema_false_2EFMV2A",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": false
            }
          },
          "required": false
        }
      }
    },
    "/generated/body/form": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_handle_form_2EFMV2A",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            }
          },
          "required": false
        }
      }
    },
    "/generated/body/inline-single": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_inline_single_2EFMV2A",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "InlinePlantSchema",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "sunlight": {
                    "enum": [
                      "full_sun",
                      "partial_sun",
                      "bright_indirect",
                      "darnkness"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "sunlight"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        }
      }
    },
    "/generated/body/manual-form-handle": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_manual_form_handle_2EFMV2A",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            }
          },
          "required": false
        }
      }
    },
    "/generated/body/manual-form-show": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_manual_form_show_2EFMV2A"
      }
    },
    "/generated/body/module-single": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "custom_operation_id_module_single",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/generated/body/module-single-no-required": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": true
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_module_single_not_required_2EFMV2A",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            }
          },
          "required": false
        }
      }
    },
    "/generated/body/wildcard": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "body_wildcard_media_type_2EFMV2A",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": false
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            }
          },
          "required": false
        }
      }
    },
    "/generated/meta/after-metas": {
      "get": {
        "tags": [
          "zzz",
          "aaa",
          "shared1",
          "shared2"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "meta_after",
        "parameters": [
          {
            "in": "query",
            "name": "self1",
            "required": false,
            "schema": true
          },
          {
            "in": "query",
            "name": "self2",
            "required": false,
            "schema": true
          },
          {
            "in": "query",
            "name": "shared1",
            "required": false,
            "schema": true
          },
          {
            "in": "query",
            "name": "shared2",
            "required": false,
            "schema": {
              "pattern": "[0-9]+"
            }
          }
        ]
      }
    },
    "/generated/meta/before-metas": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "meta_before"
      }
    },
    "/generated/meta/overrides-param": {
      "get": {
        "tags": [
          "shared1",
          "zzz",
          "shared2"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "meta_override",
        "parameters": [
          {
            "in": "query",
            "name": "shared2",
            "required": false,
            "schema": {
              "overriden": true
            }
          },
          {
            "in": "path",
            "name": "shared1",
            "required": true,
            "schema": true
          },
          {
            "in": "query",
            "name": "shared1",
            "required": false,
            "schema": true
          }
        ]
      }
    },
    "/generated/method/p": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mDELETE"
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mGET"
      },
      "head": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mHEAD"
      },
      "options": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mOPTIONS"
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mPATCH"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mPOST"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mPUT"
      },
      "trace": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.RespSchema"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "mTRACE"
      }
    },
    "/generated/no-html-errors": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": true
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "json_errors_create_plant_HEVKYZY",
        "parameters": [
          {
            "in": "query",
            "name": "an_int",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PlantSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/generated/no-params": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": true
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_no_params_LQEIGEQ"
      }
    },
    "/generated/params/{slug}/array-ref": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "parameter_array_ref",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryParamArrayOfIntegers"
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/arrays": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_array_types_LQEIGEQ",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "query__array__style_form__explode_false",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "query__array__style_form__explode_true",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "query__array__style_spaceDelimited__explode_false",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "spaceDelimited"
          },
          {
            "explode": true,
            "in": "query",
            "name": "query__array__style_spaceDelimited__explode_true",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "spaceDelimited"
          },
          {
            "explode": false,
            "in": "query",
            "name": "query__array__style_pipeDelimited__explode_false",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "pipeDelimited"
          },
          {
            "explode": true,
            "in": "query",
            "name": "query__array__style_pipeDelimited__explode_true",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "pipeDelimited"
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/boolean-schema-false": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_boolean_schema_false_LQEIGEQ",
        "parameters": [
          {
            "in": "query",
            "name": "reject_me",
            "required": false,
            "schema": false
          },
          {
            "in": "query",
            "name": "also_reject",
            "required": false,
            "schema": false
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/bracket-types": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "parameter_bracket_types",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "explicit_brackets_array[]",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "explicit_brackets_scalar[]",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/generic": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_generic_param_types_LQEIGEQ",
        "parameters": [
          {
            "in": "query",
            "name": "string_param",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "boolean_param",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "integer_param",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "number_param",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/s/{shape}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_scope_only_LQEIGEQ",
        "parameters": [
          {
            "in": "path",
            "name": "shape",
            "required": true,
            "schema": {
              "enum": [
                "square",
                "circle"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/s/{shape}/t/{theme}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_scope_and_single_LQEIGEQ",
        "parameters": [
          {
            "in": "path",
            "name": "shape",
            "required": true,
            "schema": {
              "enum": [
                "square",
                "circle"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "theme",
            "required": true,
            "schema": {
              "enum": [
                "dark",
                "light"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/s/{shape}/t/{theme}/c/{color}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_scope_and_two_path_params_LQEIGEQ",
        "parameters": [
          {
            "in": "path",
            "name": "shape",
            "required": true,
            "schema": {
              "enum": [
                "square",
                "circle"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "theme",
            "required": true,
            "schema": {
              "enum": [
                "dark",
                "light"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "color",
            "required": true,
            "schema": {
              "enum": [
                "red",
                "blue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "shape",
            "required": true,
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "theme",
            "required": false,
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "color",
            "required": false,
            "schema": {
              "$id": "test://test",
              "$ref": "test://test#/d/shape",
              "d": {
                "shape": {
                  "maximum": 100,
                  "minimum": 10,
                  "type": "integer"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/t/{theme}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_single_path_param_LQEIGEQ",
        "parameters": [
          {
            "in": "path",
            "name": "theme",
            "required": true,
            "schema": {
              "enum": [
                "dark",
                "light"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/params/{slug}/t/{theme}/c/{color}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "_dummy_schema": true
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "param_two_path_params_LQEIGEQ",
        "parameters": [
          {
            "in": "path",
            "name": "theme",
            "required": true,
            "schema": {
              "enum": [
                "dark",
                "light"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "color",
            "required": true,
            "schema": {
              "enum": [
                "red",
                "blue"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "pattern": "[a-z-]+",
              "type": "string"
            }
          }
        ]
      }
    },
    "/generated/resp/fortune-200-bad-content-type": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.FortuneCookie"
                }
              }
            },
            "description": "hello!"
          }
        },
        "operationId": "fortune_bad_content_type"
      }
    },
    "/generated/resp/fortune-200-invalid": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.FortuneCookie"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "fortune_invalid"
      }
    },
    "/generated/resp/fortune-200-no-content-def": {
      "get": {
        "responses": {
          "200": {
            "description": "Hello"
          }
        },
        "operationId": "fortune_no_content_def"
      }
    },
    "/generated/resp/fortune-200-req-body": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.FortuneCookie"
                }
              }
            },
            "description": "no description"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit:ErrorResponse"
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.GenericError"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "fortune_requiring_params",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "category": {
                    "enum": [
                      "wisdom",
                      "humor",
                      "warning",
                      "advice"
                    ]
                  }
                },
                "required": [
                  "category"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        }
      }
    },
    "/generated/resp/fortune-200-valid": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.FortuneCookie"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "fortune_valid"
      }
    },
    "/generated/resp/fortune-200-valid-from-ref": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/SpecialFortune"
          }
        },
        "operationId": "fortune_from_ref"
      }
    },
    "/generated/resp/fortune-500-bad-default-resp": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.FortuneCookie"
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.GenericError"
                }
              }
            },
            "description": "no description"
          }
        },
        "operationId": "fortune_invalid_default_resp"
      }
    },
    "/generated/resp/fortune-500-default-resp": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.FortuneCookie"
                }
              }
            },
            "description": "no description"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oaskit.TestWeb.Schemas.GenericError"
                }
              }
            },
            "description": "some description"
          }
        },
        "operationId": "fortune_default_resp"
      }
    }
  }
}